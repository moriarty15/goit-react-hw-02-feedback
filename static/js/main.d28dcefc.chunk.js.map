{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js","Components/FeedbackOptions/FeedbackOption.module.css","Components/Section/Section.module.css","Components/Notification/Notification.module.css"],"names":["module","exports","Statistic","props","good","neutral","bad","total","positivePercentage","className","s","div","list","item","Math","round","FeedbackOptions","onLeaveFeedback","options","container","type","onClick","Section","title","children","Notification","message","description","App","state","increment","e","target","textContent","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","React","Component","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.d28dcefc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Statistics_div__1-aDP\",\"list\":\"Statistics_list__3apJU\",\"item\":\"Statistics_item__2b_s0\"};","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistic(props) {\n  const { good, neutral, bad, total, positivePercentage } = props;\n  return (\n    <div className={s.div}>\n      <ul className={s.list}>\n        <li className={s.item}>\n          Good: <span>{good}</span>\n        </li>\n        <li className={s.item}>\n          Neutral: <span>{neutral}</span>\n        </li>\n        <li className={s.item}>\n          Bad: <span>{bad}</span>\n        </li>\n        <li className={s.item}>\n          Total: <span>{total}</span>\n        </li>\n        <li className={s.item}>\n          Positive feedback:{' '}\n          <span>{good !== 0 ? Math.round(positivePercentage) : 0}%</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nStatistic.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOption.module.css';\n\nexport default function FeedbackOptions(props) {\n  const {onLeaveFeedback, options} = props\n  return (\n    <div className={s.container}>\n      <button className={s.good} type=\"button\" onClick={onLeaveFeedback}>\n        good\n      </button>\n      <button className={s.neutral} type=\"button\" onClick={onLeaveFeedback}>\n        neutral\n      </button>\n      <button className={s.bad} type=\"button\" onClick={onLeaveFeedback}>\n        bad\n      </button>\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section(props) {\n  const { title, children } = props;\n  return (\n    <>\n      <p className={s.title}>{title}</p>\n      {children}\n    </>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <p className={s.description}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport Statistic from './Components/Statistics';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Section from './Components/Section';\nimport Notification from './Components/Notification';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  increment = e => {\n    switch (e.target.textContent) {\n      case 'good':\n        this.setState(prevState => ({ good: prevState.good + 1 }));\n        break;\n      case 'neutral':\n        this.setState(prevState => ({ neutral: prevState.neutral + 1 }));\n        break;\n      case 'bad':\n        this.setState(prevState => ({ bad: prevState.bad + 1 }));\n        break;\n      default:\n        return;\n    }\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return (good * 100) / this.countTotalFeedback();\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={''} onLeaveFeedback={this.increment} />\n        </Section>\n        {good + neutral + bad > 0 ? (\n          <Section title=\"Statictic\">\n            <Statistic\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Section title=\"Statictic\">\n            <Notification message=\"No feedback given\" />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import reactDom from 'react-dom';\r\nimport App from './App';\r\n\r\nreactDom.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOption_button__2-jS-\",\"good\":\"FeedbackOption_good__3izLS FeedbackOption_button__2-jS-\",\"neutral\":\"FeedbackOption_neutral__XVlwP FeedbackOption_button__2-jS-\",\"bad\":\"FeedbackOption_bad__3UrQc FeedbackOption_button__2-jS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2Q53b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Notification_description__odB9K\"};"],"sourceRoot":""}