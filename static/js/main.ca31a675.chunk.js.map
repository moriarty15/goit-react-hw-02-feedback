{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js","Components/FeedbackOptions/FeedbackOption.module.css","Components/Section/Section.module.css","Components/Notification/Notification.module.css"],"names":["module","exports","Statistic","props","good","neutral","bad","total","positivePercentage","className","s","div","list","item","Math","round","FeedbackOptions","incGood","incNeutral","incBad","container","button","type","onClick","Section","title","children","Notification","message","description","App","state","incrementGoodFeedback","setState","prevState","incrementNeutralFeedback","incrementBadFeedback","countTotalFeedback","countPositiveFeedbackPercentage","this","React","Component","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca31a675.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Statistics_div__p8WIT\",\"list\":\"Statistics_list__270Qr\",\"item\":\"Statistics_item__2yDp4\"};","import s from \"./Statistics.module.css\";\r\n\r\nexport default function Statistic(props) {\r\n    const { good, neutral, bad, total, positivePercentage } = props;\r\n    return <div className={s.div}>\r\n        Statictic\r\n        <ul className={s.list}>\r\n          <li className={s.item}>Good: <span>{good}</span></li>\r\n          <li className={s.item}>Neutral: <span>{neutral}</span></li>\r\n          <li className={s.item}>Bad: <span>{bad}</span></li>\r\n          <li className={s.item}>Total: <span>{total}</span></li>\r\n          <li className={s.item}>Positive feedback: <span>{good !== 0 ? Math.round(positivePercentage) : 0}%</span></li>\r\n        </ul>\r\n      </div>\r\n}\r\n\r\n","import s from \"./FeedbackOption.module.css\"\r\n\r\nexport default function FeedbackOptions(props) {\r\n    const {incGood, incNeutral, incBad} = props\r\n    return <div className={s.container}>\r\n        <button className={s.button} type=\"button\" onClick = {incGood}>\r\n        good\r\n      </button>\r\n      <button className={s.button} type=\"button\" onClick = {incNeutral}>\r\n        neutral\r\n      </button>\r\n      <button className={s.button} type=\"button\" onClick = {incBad}>\r\n        bad\r\n      </button>\r\n    </div>\r\n}\r\n","import s from \"./Section.module.css\"\r\n\r\nexport default function Section(props) {\r\n    const { title, children } = props;\r\n    return <div>\r\n        <p className={s.title}>{ title}</p>\r\n        {children}\r\n    </div>\r\n}","import s from \"./Notification.module.css\"\r\n\r\nexport default function Notification({ message }) {\r\n    return <p className={s.description}>{message}</p>\r\n}","import React from \"react\";\nimport Statistic from \"./Components/Statistics\";\nimport FeedbackOptions from './Components/FeedbackOptions'\nimport Section from \"./Components/Section\";\nimport Notification from \"./Components/Notification\"\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  incrementGoodFeedback = () => {\n    this.setState(prevState => ({ good: prevState.good + 1, }))\n  }\n  incrementNeutralFeedback = () => {\n    this.setState(prevState => ({neutral: prevState.neutral + 1}))\n  }\n  incrementBadFeedback = () => {\n    this.setState(prevState => ({bad: prevState.bad + 1}))\n  }\n  countTotalFeedback = () => {\n    const {good, neutral, bad} = this.state\n    return good + neutral + bad;\n  }\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return good * 100/this.countTotalFeedback()\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    if (good > 0 || neutral > 0 || bad > 0)\n    {\n      return (\n      <Section title=\"Please leave feedback\">\n\n        <FeedbackOptions\n          incGood={this.incrementGoodFeedback}\n          incNeutral={this.incrementNeutralFeedback}\n          incBad={this.incrementBadFeedback}\n        />\n        <Statistic\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n        \n      </Section>\n    )\n    }\n    else {\n      return (\n      <Section title=\"Please leave feedback\">\n\n        <FeedbackOptions\n          incGood={this.incrementGoodFeedback}\n          incNeutral={this.incrementNeutralFeedback}\n          incBad={this.incrementBadFeedback}\n        />        \n        <Notification message=\"No feedback given\"/>\n      </Section>\n    )}\n  }\n}\n\nexport default App;","import reactDom from 'react-dom'\nimport App from './App'\n\nreactDom.render(<App/>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOption_button__1RBZD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2k-CW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Notification_description__3979I\"};"],"sourceRoot":""}