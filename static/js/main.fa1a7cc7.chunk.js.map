{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js","Components/FeedbackOptions/FeedbackOption.module.css","Components/Section/Section.module.css","Components/Notification/Notification.module.css"],"names":["module","exports","Statistic","props","good","neutral","bad","total","positivePercentage","className","s","div","list","item","Math","round","FeedbackOptions","incGood","incNeutral","incBad","container","button","type","onClick","Section","title","children","Notification","message","description","App","state","incrementGoodFeedback","setState","prevState","incrementNeutralFeedback","incrementBadFeedback","countTotalFeedback","countPositiveFeedbackPercentage","this","React","Component","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa1a7cc7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Statistics_div__p8WIT\",\"list\":\"Statistics_list__270Qr\",\"item\":\"Statistics_item__2yDp4\"};","import s from './Statistics.module.css';\n\nexport default function Statistic(props) {\n  const { good, neutral, bad, total, positivePercentage } = props;\n  return (\n    <div className={s.div}>\n      Statictic\n      <ul className={s.list}>\n        <li className={s.item}>\n          Good: <span>{good}</span>\n        </li>\n        <li className={s.item}>\n          Neutral: <span>{neutral}</span>\n        </li>\n        <li className={s.item}>\n          Bad: <span>{bad}</span>\n        </li>\n        <li className={s.item}>\n          Total: <span>{total}</span>\n        </li>\n        <li className={s.item}>\n          Positive feedback:{' '}\n          <span>{good !== 0 ? Math.round(positivePercentage) : 0}%</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import s from './FeedbackOption.module.css';\n\nexport default function FeedbackOptions(props) {\n  const { incGood, incNeutral, incBad } = props;\n  return (\n    <div className={s.container}>\n      <button className={s.button} type=\"button\" onClick={incGood}>\n        good\n      </button>\n      <button className={s.button} type=\"button\" onClick={incNeutral}>\n        neutral\n      </button>\n      <button className={s.button} type=\"button\" onClick={incBad}>\n        bad\n      </button>\n    </div>\n  );\n}\n","import s from './Section.module.css';\n\nexport default function Section(props) {\n  const { title, children } = props;\n  return (\n    <div>\n      <p className={s.title}>{title}</p>\n      {children}\n    </div>\n  );\n}\n","import s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <p className={s.description}>{message}</p>;\n}\n","import React from 'react';\nimport Statistic from './Components/Statistics';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Section from './Components/Section';\nimport Notification from './Components/Notification';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  incrementGoodFeedback = () => {\n    this.setState(prevState => ({ good: prevState.good + 1 }));\n  };\n  incrementNeutralFeedback = () => {\n    this.setState(prevState => ({ neutral: prevState.neutral + 1 }));\n  };\n  incrementBadFeedback = () => {\n    this.setState(prevState => ({ bad: prevState.bad + 1 }));\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return (good * 100) / this.countTotalFeedback();\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    if (good > 0 || neutral > 0 || bad > 0) {\n      return (\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            incGood={this.incrementGoodFeedback}\n            incNeutral={this.incrementNeutralFeedback}\n            incBad={this.incrementBadFeedback}\n          />\n          <Statistic\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      );\n    } else {\n      return (\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            incGood={this.incrementGoodFeedback}\n            incNeutral={this.incrementNeutralFeedback}\n            incBad={this.incrementBadFeedback}\n          />\n          <Notification message=\"No feedback given\" />\n        </Section>\n      );\n    }\n  }\n}\n\nexport default App;\n","import reactDom from 'react-dom';\nimport App from './App';\n\nreactDom.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOption_button__1RBZD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2k-CW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Notification_description__3979I\"};"],"sourceRoot":""}